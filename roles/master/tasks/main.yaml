---
# 1-st control node
- name: Check if kubeadm has already run
  stat:
    path: "/etc/kubernetes/pki/ca.key"
  register: kubeadm_ca

- meta: end_play
  when: kubeadm_ca.stat.exists

- name: Create /etc/kubernetes directory
  file:
    path: /etc/kubernetes
    state: directory

- name: Copy kubeadm-config.yaml
  template:
    src: kubeadm-config.j2
    dest: /etc/kubernetes/kubeadm-config.yaml

- name: Init master control node
  shell: kubeadm init --config /etc/kubernetes/kubeadm-config.yaml
  register: kubeadm_init

# Nodelocaldns

- name: Get coredns service IP address
  shell: kubectl -n kube-system get svc kube-dns -o jsonpath='{.spec.clusterIP}'
  register: dns_ip

- set_fact: 
    coredns_ip: "{{ dns_ip.stdout }}"

- name: Copy nodelocaldns manifest
  template:
    src: nodelocaldns-daemonset.j2
    dest: /etc/kubernetes/nodelocaldns-daemonset.yaml

- name: Deploy nodelocaldns
  shell: kubectl apply -f /etc/kubernetes/nodelocaldns-daemonset.yaml

# Calico
- name: Check for installed tigera-operator
  shell: kubectl get ns tigera-operator
  register: tigera_operator_out
  ignore_errors: yes

- name: Install tigera-operator
  when: tigera_operator_out.rc == 1
  shell: "kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/{{ tigera_operator_version }}/manifests/tigera-operator.yaml"

- name: Copy calico-install.yaml
  template:
    src: calico-install.j2
    dest: /etc/kubernetes/calico-install.yaml

- name: Insatall Calico
  shell: kubectl apply -f /etc/kubernetes/calico-install.yaml
