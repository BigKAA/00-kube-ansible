# На будщее, потом пригодится.
---
apiVersion: kubeadm.k8s.io/v1beta4
kind: InitConfiguration
localAPIEndpoint:
  advertiseAddress: {{ hostvars[groups['k8s_masters'][0]].ansible_facts.default_ipv4.address }}
  bindPort: 6443
nodeRegistration:
  criSocket: "{{ cri_socket }}"
  imagePullPolicy: IfNotPresent
  name: {{ ansible_facts.fqdn }}
bootstrapTokens:
- groups:
  - system:bootstrappers:kubeadm:default-node-token
  token: abcdef.0123456789abcdef
  ttl: 24h0m0s
  usages:
  - signing
  - authentication
timeouts:
  controlPlaneComponentHealthCheck: 4m0s
  discovery: 5m0s
  etcdAPICall: 2m0s
  kubeletHealthCheck: 4m0s
  kubernetesAPICall: 1m0s
  tlsBootstrap: 5m0s
  upgradeManifests: 5m0s
---
kind: ClusterConfiguration
apiVersion: kubeadm.k8s.io/v1beta4
apiServer: {}
caCertificateValidityPeriod: 87600h0m0s
certificateValidityPeriod: 8760h0m0s
certificatesDir: /etc/kubernetes/pki
clusterName: {{ kube_domain_name }}
kubernetesVersion: {{ kube_version }}
controllerManager: {}
{% if ha_cluster_virtual_ip is defined and ha_cluster_virtual_ip != "" %}
controlPlaneEndpoint: {{ ha_cluster_virtual_ip }}:{{ ha_cluster_virtual_port }}
{% else %}
controlPlaneEndpoint: {{ hostvars[groups['k8s_masters'][0]].ansible_facts.default_ipv4.address }}:6443
{% endif %}
dns: {}
encryptionAlgorithm: RSA-2048
etcd:
  local:
    dataDir: /var/lib/etcd
imageRepository: {{ imageRepository }}
networking:
  dnsDomain: {{ kube_domain_name }}
  serviceSubnet: {{ service_cidr }}
  podSubnet: {{ pod_network_cidr }}
proxy: {}
scheduler: {}
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
bindAddress: 0.0.0.0
clusterCIDR: {{ pod_network_cidr }}
ipvs:
  strictARP: true
mode: ipvs
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
clusterDNS:
- {{ nodelocaldns_local_ip }}
{% if system_reserved is defined and system_reserved %}
systemReserved:
{% if system_memory_reserved is defined %}
  memory: {{ system_memory_reserved }}
{% endif %}
{% if system_cpu_reserved is defined %}
  cpu: {{ system_cpu_reserved }}
{% endif %}
{% if system_ephemeral_storage_reserved is defined %}
  ephemeral-storage: {{ system_ephemeral_storage_reserved }}
{% endif %}
{% endif %}
# Default: "10Mi"
{% if container_log_max_size is defined %}
containerLogMaxSize: {{ container_log_max_size }}
{% endif %}
{% if container_log_max_size is defined %}
containerLogMaxFiles: {{ container_log_max_files }}
{% endif %}
