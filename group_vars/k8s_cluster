ansible_python_interpreter: /usr/bin/python3

# Kubernetes parameters

# k8s.gcr.io image registry is gradually being redirected to registry.k8s.io (since 2023 Monday March 20th).
imageRepository: registry.k8s.io
# Enable dockerhub mirror
dockerhubMirror: false
dockerhubMirrorURLs: 
  - "https://mirror.gcr.io/v2"
  - "https://daocloud.io/v2"


# Versions: 1.28 - 1.30.4. 
# 1.31.x гдето работает, где то нет.
kube_version: 1.31.2

kube_domain_name: cluster.local
service_cidr: "10.233.0.0/18"
pod_network_cidr: "10.233.64.0/18"

##################################################
# CRI parameters
# crio или containerd
cri: containerd

# Необходимо указать путь к сокету.
# containerd
cri_socket: unix:///run/containerd/containerd.sock
# crio
# cri_socket: unix:///var/run/crio/crio.sock

# Sanbox image
# k8s v3.11 -> registry.k8s.io/pause:3.10
# k8s v3.10 -> registry.k8s.io/pause:3.9
# Если сомневаетесь - закоментируйте строку ниже
sandbox_image: "registry.k8s.io/pause:3.10"

# Если используется crio, необходимо указать его версию.
crio_version: v1.31

# Внимательно смотрим в какой состоянии находится требуемая версия CRI-O.
# https://cri-o.io/
#
# stable, prerelease
#
# На данный момент версия 1.31 находтся в состоянии prerelease
stage: prerelease

###################################
# CNI 
#
# - calico
# - flannel
cni: calico

# calico
# One of: IPIP, VXLAN, IPIPCrossSubnet, VXLANCrossSubnet, None
# Work only install without eBPF
encapsulation: "IPIPCrossSubnet"
# https://github.com/projectcalico/calico
tigera_operator_version: v3.28.1
### To install ePBF uncomment next line
# enableBPF: yes

# Kubelet configuration
# https://kubernetes.io/docs/reference/config-api/kubelet-config.v1beta1/
## Reserve resources for OS system daemons.
system_reserved: true
system_memory_reserved: 512Mi
system_cpu_reserved: 500m
## system_ephemeral_storage_reserved: 5Gi
## Default: "10Mi"
container_log_max_size: 1Mi
## Default: 5
container_log_max_files: 3

# It is advisable not to change.
kubectl_config: /etc/kubernetes/admin.conf
kubeadmin_config: /etc/kubernetes/kubeadm.conf

# nodelocaldns
# https://github.com/kubernetes/dns
nodelocaldns_image: "registry.k8s.io/dns/k8s-dns-node-cache:1.23.1"
## Change only if this IP is already taken.
nodelocaldns_local_ip: 169.254.25.10

## HA cluser
# If you need disable HA, undefine ha_cluster_virtual_ip
# ha_cluster_virtual_ip: 192.168.218.189
# ha_cluster_virtual_port: 7443

############################################################
####  UTILS                                  ###############
#### Запускаются как отдельный playbook      ###############
#### ansible-playbook services/06-utils.yaml ###############
############################################################

### Helm
### Install only on 1-st control node
helmVersion: v3.16.3

### Nfs provisioner
### https://github.com/kubernetes-sigs/nfs-subdir-external-provisioner
nfsEnable: true
nfsServerContainer: "gcr.io/k8s-staging-sig-storage/nfs-subdir-external-provisioner@sha256:b1450f94a3610b9fb1cc9cb29ef528b7b5608db6f17a039ea9ba73f0aca0d1a2"
nfsServerHost: "192.168.218.170"
nfsServerPath: "/var/nfs-disk"

### Cert-manager 
### https://github.com/cert-manager/cert-manager
certManagerEnable: true
certManagerVersion: "v1.16.1"

### Metrics server
### https://github.com/kubernetes-sigs/metrics-server
metricsServerEnable: true
metricsServerImage: "gcr.io/k8s-staging-metrics-server/metrics-server:v0.7.2"

### MetalLB
### https://metallb.universe.tf/
### Важно! Перед использованием закажите кластерные IP адреса,
### которые будут переданы в управление MetalLB.
metallbEnable: true
metallbChartVersion: "v0.14.8"
# Массив IP адресов, сетей и/или диапазонов IP
# Примеры:
# Один IP - 192.168.1.1/32
# Диапазон IP - 192.168.218.180-192.168.218.185
# Сеть - 192.168.1.64/30
metallbAddresses:
- 192.168.218.180-192.168.218.185

### Ingress controller
### https://github.com/kubernetes/ingress-nginx
### TODO: add helm chart
ingressControllerEnable: true
ingressControllerChartVersion: "4.11.3"
ingressControllerClasName: "system-ingress"
ingressControllerServiceType: "LoadBalancer"
ingressControllerReplicaCount: 1

### ArgoCD
### https://github.com/argoproj/argo-cd
argoCDEnable: true
argoCDChartVersion: "7.7.3"